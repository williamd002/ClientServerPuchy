import sqlite3
import os
from datetime import datetime, date

DEBUG = True

db = sqlite3.connect('mydb.db')

cursor = db.cursor()



    
def CreateTableEmployee():
    try:
        cursor.execute('''
    CREATE TABLE employee( employeeID int PRIMARY KEY, RFIDcode varchar(10), firstname varchar(50),
    surname varchar(50), department varchar(50), jobtitle varchar(50))
    ''')
        db.commit()
    except:
        if DEBUG:
            print('\n [DEBUG] TableEmployee already exists. \n ')



def CreateTableHours():
    try:
        cursor.execute('''
        CREATE TABLE hours( hourID int PRIMARY KEY, weekID int, employeeID int, totalhoursforweek real)
        ''')
        db.commit()
    except:
        if DEBUG:
            print('\n [DEBUG] TableHours already exists. \n ')


def CreateTableClocking():
    try:
        cursor.execute('''
        CREATE TABLE clocking( clockingID integer PRIMARY KEY AUTOINCREMENT, RFIDcode varchar(10), clientID int, clockdate datetime,clocktime datetime, comingIn boolean)
        ''')
        db.commit()
    except:
        if DEBUG:
            print('\n [DEBUG] TableClocking already exists. \n ')

def CreateTableClients():
    try:
        cursor.execute('''
        CREATE TABLE clients( clientID int, MacAddress string, IpAddress string, Description string, LastSeen string)
        ''')
        db.commit()
    except:
        if DEBUG:
            print('\n [DEBUG] TableClients already exists. \n ')

def menu():
    option = "x"
    while option != "0":
        print("Initialise Database")
        print("1. CreateTableEmployee ")
        print("2. CreateTableHours ")
        print("3. CreateTableClocking ")
        print("4. CreateTableClients ")
        print("5. Turn Debug mode off")
        print("0. Quit")
        option = input(":: ")
        if option == "1":
            init_suppliers()
        elif option == "2":
            create_supplier(check_number_of_suppliers())
        elif option == "3":
            debug = False
        elif option == "0":
            CONNECTION.commit()
        print()
        print()




def AddDataClocking(RFIDcode, clientID):
    '''server-code: having received RFID code from a client
        if RFID code does not exist send back error code to client
        otherwise add data to table
    '''
    sqlstring = f"SELECT * FROM employee WHERE RFIDcode = '{RFIDcode}'"
    print(sqlstring)
    cursor.execute(sqlstring)
    user = cursor.fetchone()
    print(user)
    if user[0] == None:
        if DEBUG:
            print('RFID code not in database')
    else:   #now add data
        TimeNow = datetime.now()
        current_time = TimeNow.strftime("%H:%M:%S")
        currentClockingID = 1
        clockingIDNOW = currentClockingID =+ 1
        today = date.today()
        currenttime = f'{today.day}/{today.month}/{today.year}'
        sqlstring = f"INSERT INTO clocking (RFIDcode, clientID, clockdate, clocktime, comingin) VALUES ({RFIDcode}, '{clientID}', '{today}', '{current_time}', 1)"
        print(sqlstring)
        cursor.execute(sqlstring)
        print("test print")
        db.commit()


def importcsvdata():
    csvfile = open("data.csv", "r")
    csvfile.readline()
    data = csvfile.readlines()
    for lineofdata in data:
        lineofdata = lineofdata.split(",")
        AddDataClocking(lineofdata[0], lineofdata[1])

def TestQuery():
    c = db.cursor()
    c.execute('SELECT * FROM {tn} WHERE employeeID = {cn} '.\
              format(tn='employee', cn=1))
    all_rows = c.fetchall()
    print('1):', all_rows)

    
#def AddData













